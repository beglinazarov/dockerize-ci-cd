name: Docker Deploy to Dev

on:
  push:
    branches:
      - main

    tags:
      - dev*

env:
  REGISTRY: "registry.digitalocean.com/${{secrets.DIGITALOCEAN_CONTAINER_REGISTRY}}"

jobs:
  docker_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        
      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            echo "Docker Test Not Implemented Yet!"
          fi
  build:
    runs-on: ubuntu-latest
    needs: docker_test
    steps:
      - uses: actions/checkout@v2
        
      - name: Docker build of a stack
        run: |
          if [ -f docker-compose.yml ]; then
            docker-compose --file docker-compose.yml build
            docker-compose ps
          else
            echo "Docker Build Not Implemented Yet!"
          fi
      
      # install the doctl on the runner
      - name: Install doctl     
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login

      - name: Push image to DigitalOcean Container Registry
        run: docker-compose push 

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build

    steps:
      # Login to the doctl on the runner
      - name: Install doctl     
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          envs: REGISTRY,GITHUB_SHA          
          script: |

            # Snap like a Snack
            # Checking Doctl connect to docker 
            snap connect doctl:dot-docker
            
            # Let see what you have
            docker-compose ps
            
            # Stop running container
            docker-compose down
            
            # Pull Down Staff
            docker-compose pull

            # Run a new container from a new image 
            docker-compose up -d 
            
      - name: Deploy to Docker Host
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: user@myswarm.com
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          deployment_mode: docker-compose
          copy_stack_file: true
          deploy_path: /root/my-deployment
          stack_file_name: docker-compose.yaml
          keep_files: 5
          args: up -d
          docker_prune: 'false'
          pull_images_first: 'false'